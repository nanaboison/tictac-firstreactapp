{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","React","Component","Board","i","this","squares","renderSquare","Game","state","history","Array","fill","xIsNext","stepNumber","step","setState","slice","length","calculateWinner","concat","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAIA,SAASA,EAAQC,GACf,OACE,wBAAQC,UAAY,SAASC,QAASF,EAAME,QAA5C,SACKF,EAAMG,QAIOC,IAAMC,U,IAYpBC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACR,EAAD,CACPI,MAAOK,KAAKR,MAAMS,QAAQF,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,oBAGpC,WACE,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKT,UAAU,YAAf,UACGO,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAvBTN,IAAMC,WA8BpBM,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRJ,QAASK,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,0CAWnB,SAAOC,GACLV,KAAKW,SAAS,CACZF,WAAYC,EACZF,QAAUE,EAAO,IAAO,M,yBAI5B,SAAYX,GACV,IAAMM,EAAUL,KAAKI,MAAMC,QAAQO,MAAM,EAAGZ,KAAKI,MAAMK,WAAa,GAE9DR,EADUI,EAAQA,EAAQQ,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKI,MAAMI,QAAU,IAAM,IACxCR,KAAKW,SAAS,CACZN,QAASA,EAAQU,OAAO,CAAC,CACvBd,QAASA,KAEXQ,WAAYJ,EAAQQ,OACpBL,SAAUR,KAAKI,MAAMI,a,oBAIzB,WAAU,IAgBJQ,EAhBG,OACDX,EAAUL,KAAKI,MAAMC,QACrBY,EAAUZ,EAAQL,KAAKI,MAAMK,YAC7BS,EAASJ,EAAgBG,EAAQhB,SAEjCkB,EAAQd,EAAQe,KAAI,SAACV,EAAMW,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SAA2CC,KADpCD,MAYb,OAJEL,EADEE,EACO,WAAaA,EAEb,iBAAmBlB,KAAKI,MAAMI,QAAU,IAAM,KAGvD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACK,EAAD,CACAG,QAASgB,EAAQhB,QACjBP,QAAS,SAACK,GAAD,OAAO,EAAKyB,YAAYzB,QAGnC,sBAAKN,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GApEIvB,IAAMC,WA2EzB,SAASiB,EAAgBb,GAWvB,IAVA,IAAMwB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA1B,EAAI,EAAGA,EAAI0B,EAAMZ,OAAQd,IAAK,CAAC,IAAD,cACnB0B,EAAM1B,GADa,GAC9B2B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI3B,EAAQyB,IAAMzB,EAAQyB,KAAOzB,EAAQ0B,IAAM1B,EAAQyB,KAAOzB,EAAQ2B,GACpE,OAAO3B,EAAQyB,GAGnB,OAAO,KAKTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.5afa1843.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square (props){\n  return (\n    <button className = \"square\" onClick={props.onClick}>\n        {props.value}\n    </button>\n  );\n}\nclass Squares extends React.Component {\n    \n    render() {\n      return (\n        <button className=\"square\" \n                onClick={() => this.props.onClick()}>\n                  {this.props.value}\n        </button>\n      );\n    }\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return <Square \n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}/>;\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        xIsNext: true,\n        stepNumber: 0,\n      };\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      });\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ?\n          'Go to move #' + move :\n          'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n      let status;\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}/>\n\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}